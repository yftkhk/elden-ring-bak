name: Release

on:
  push:
    tags: ["v*"]

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} --draft --verify-tag --title ${{ github.ref_name }}

  build:
    needs: ["create-release"]
    strategy:
      fail-fast: false
      matrix:
        include:
          - host: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            label: windows-x86_64

    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    env:
      BIN: er-save-editor
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build Release
        run: cargo build --release --locked --verbose --target ${{ matrix.target }}
        env:
          CARGO_TARGET_DIR: output

      - name: Generate Artifact Name
        shell: bash
        env:
          TAG_NAME: ${{ github.ref_name }}
        run: |
          echo "ARTIFACT_NAME=$BIN-${TAG_NAME#v}-${{ matrix.label }}.zip" >> "$GITHUB_ENV"

      - name: Create Archive and Upload to Release
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir staging

          cp "output/${{ matrix.target }}/release/$BIN.exe" staging/
          cd staging
          7z a ../$ARTIFACT_NAME *

          gh release upload ${{ github.ref_name }} ../$ARTIFACT_NAME

      - name: Upload Archive to Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.ARTIFACT_NAME }}
          name: ${{ env.ARTIFACT_NAME }}
